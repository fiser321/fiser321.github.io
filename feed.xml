<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Fiser321 Blog on Fiser321 Blog</title>
        <link>https://fiser321.github.io/feed.xml</link>
        <language>zh-CN</language>
        <author>CoderZh</author>
        <rights>Copyright (c) 2015, CoderZh; all rights reserved.</rights>
        <updated>Sun, 01 Jan 2017 00:00:00 CST</updated>
        
        <item>
            <title>我的 2016</title>
            <link>https://fiser321.github.io/2017/01/01/my-2016/</link>
            <pubDate>Sun, 01 Jan 2017 00:00:00 CST</pubDate>
            <author>CoderZh</author>
            <guid>https://fiser321.github.io/2017/01/01/my-2016/</guid>
            <description>

&lt;p&gt;&lt;img src=&#34;http://7xlx3k.com1.z0.glb.clouddn.com/baseball.JPG&#34; alt=&#34;baseball&#34; /&gt;&lt;/p&gt;

&lt;p&gt;光阴似箭，岁月如梭，仿佛去年写「我的 2015」就在昨日，然而时间的确在滴滴答答中度过了 365 天。这一年里，经历了一些事，读了一些书，努力过，收获过，感恩 2016。&lt;/p&gt;

&lt;h4 id=&#34;公众号&#34;&gt;公众号&lt;/h4&gt;

&lt;p&gt;其中一个变化是，我的公众号（博客）的更新频率越来越低了。2016 年我总共写了 20 多篇文章，平均算下来，2 周才有 1 篇。相比去年的 1 周 1 篇少了不少。&lt;/p&gt;

&lt;p&gt;这其中有几个原因，首先，工作占据了我更多的时间。有的时候为了解决问题，不可避免的把工作带回了家。其次，随着小孩的长大，周末需要花更多的时间带小孩，陪家人。第三，见识了越多优秀的人，越发现自己的无知，与其为了 1 周 凑上 1 篇，还不如多沉下心学习，做些更深入的研究，多读点书，多写点代码，多存点干货再来分享。第四，还是因为懒。&lt;/p&gt;

&lt;h4 id=&#34;读书&#34;&gt;读书&lt;/h4&gt;

&lt;p&gt;2016 年，我读了以下书：《必然》、《MacTalk 跨越边界》、《7 Eleven零售的哲学》、《改变未来的九大算法》、《重来》、《马克·扎克伯格传》、《硅谷钢铁侠：埃隆·马斯克》、《途客圈创业记》、《福特自传》、《人类简史：从动物到上帝》、《Google 重新定义公司》、《Android 软件安全与逆向分析》、《第二次机器革命》、《接纳不完美的自己》、《黑客》、《成为乔布斯》……&lt;/p&gt;

&lt;p&gt;其中的《人类简史》开阔了我的思维认识，也是张小龙极力推荐的。但对我的思维改变最大的，是《接纳不完美的自己》这本书。书中提到一个形象的比喻：每个人刚出生时内心都有一座很大的城堡，城堡里有很多的房间，各式各样的房间，每个房间代表一种特质，比如：善良、勇敢、正直、激情，当然也包括了：自私、胆小、愚蠢，奸诈等不好的特质。开始每扇门都是对外敞开的。随着慢慢的长大，你去了别人的城堡，发现有些不好的特质是别人没有的（或许是被藏起来了），于是你把不好特质的门锁上，不让别人进去，甚至是自己。慢慢的，越来越多的门被锁上，偌大的一座城堡，最后你只能在很少的房间活动。&lt;/p&gt;

&lt;p&gt;那些被锁上的房间，正是不完美的自己。有些人选择把锁住的房间遗忘，而一旦发现别人表现出不好的特质，则会异常的激动和排斥。比如，你认为某个人非常的小气，甚至为此感到不齿，其实恰恰说明了你自己正是一个小气之人。因为你害怕别人说你小气，于是小气之门被你严严锁死，一旦你发现某个人表现出小气的特质时，你就会异常的激动，拼命的表现出不齿的感觉以和小气撇清关系。&lt;/p&gt;

&lt;p&gt;所以，接纳不完美的自己，第一步是把自己内心深处的房间打开。每当你觉得别人怎么怎么样时，你越是激动，越要想一想，我是不是越是一样，只是我把门锁上了(直白一点：你越认为别人笨，其实越是你笨。你越是认为别人心机婊，其实你越是心机婊)。于是你会对别人的缺点更加宽容，也能更好的反思自我。第二步是必要时利用你的缺点。比如有人要非法拆迁你的房子，你是不是表现的无赖一些反而会更好。&lt;/p&gt;

&lt;h4 id=&#34;代码&#34;&gt;代码&lt;/h4&gt;

&lt;p&gt;写代码依然是一件非常有意思的事情。2016 年的一个重大变化是，我的开发环境已经全面转向了 Mac。我深刻的感受到了《成为乔布斯》书中提到的乔布斯对艺术和美的追求。一句话：用更好看的 Mac，写代码不折腾。&lt;/p&gt;

&lt;p&gt;编程语言方面，Go 和 Swift 走马观花了一下，node.js 有初步涉及。主力语言还是 Python 和 C++，有时也会被老板用枪指着写点 Java。&lt;/p&gt;

&lt;p&gt;机器学习粗浅了解，还未入门，来年要加大学习投入。&lt;/p&gt;

&lt;p&gt;从 GitHub 统计的我过去一年的贡献活跃度可以看出，下半年开始，我变得非常的不活跃，来年争取填满更多的格子。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://7xlx3k.com1.z0.glb.clouddn.com/github2016.png&#34; alt=&#34;github2016&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;工作&#34;&gt;工作&lt;/h4&gt;

&lt;p&gt;依然认为是最棒的公司。来年继续加油。&lt;/p&gt;

&lt;h4 id=&#34;不足&#34;&gt;不足&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;公众号（博客）写少了。&lt;/li&gt;
&lt;li&gt;GitHub 代码写少了。&lt;/li&gt;
&lt;li&gt;运动少了。&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;展望&#34;&gt;展望&lt;/h4&gt;

&lt;p&gt;好的习惯继续发扬，不足要改掉，健身的重要性要提高一个 Level。&lt;/p&gt;

&lt;h4 id=&#34;最后&#34;&gt;最后&lt;/h4&gt;

&lt;p&gt;感谢你们！如此低的更新频率下还没有退订，感谢！Happy 2017!&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>关于我</title>
            <link>https://fiser321.github.io/about/</link>
            <pubDate>Thu, 01 Jan 2015 08:55:31 CST</pubDate>
            <author>CoderZh</author>
            <guid>https://fiser321.github.io/about/</guid>
            <description>

&lt;p class=&#34;message&#34;&gt;
大家好，我叫 CoderZh，是一名程序员。
&lt;/p&gt;

&lt;h3 id=&#34;我的经历&#34;&gt;我的经历&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;2003-2007 中南大学土木工程系&lt;/li&gt;
&lt;li&gt;2007-2011 测试开发（SDET 金山软件）。&lt;/li&gt;
&lt;li&gt;2011-2015 Unity3D 游戏服务端主程、3DMMORPG 端游程序员（创业公司）&lt;/li&gt;
&lt;li&gt;2015.3.13 - 至今「再小的个体，也有自己的品牌」&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;我的技能&#34;&gt;我的技能&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;编程语言：C++, C#, Python, Lua。钟爱 Python，捣鼓 Go……&lt;/li&gt;
&lt;li&gt;网站开发：略懂前端，常常瞎折腾 css+js，喜欢后端，通常使用 Tornado。&lt;/li&gt;
&lt;li&gt;熟悉 Cocos2d-X 游戏开发。&lt;/li&gt;
&lt;li&gt;Unity3D 打打酱油。&lt;/li&gt;
&lt;li&gt;网游服务端开发有一定的经验。&lt;/li&gt;
&lt;li&gt;会一点 Android 开发。&lt;/li&gt;
&lt;li&gt;测试开发&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;生活中的我&#34;&gt;生活中的我&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;喜欢玩游戏：LOL，FIFA，及各种虐心小游戏。喜欢挑战。&lt;/li&gt;
&lt;li&gt;乒乓球打的还行。&lt;/li&gt;
&lt;li&gt;喜欢看有内涵的电影及美剧，偶尔也陪老妈看国产家庭连续剧。&lt;/li&gt;
&lt;li&gt;喜欢思考，对未知世界保持好奇心。&lt;/li&gt;
&lt;li&gt;有点宅。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;系列文章&#34;&gt;系列文章&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cnblogs.com/coderzh/archive/2009/04/06/1426755.html&#34;&gt;玩转Google开源C++单元测试框架Google Test系列&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cnblogs.com/coderzh/archive/2008/07/08/pythoncookbook.html&#34;&gt;Python天天美味&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;一些链接&#34;&gt;一些链接&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;我的独立博客：&lt;a href=&#34;http://blog.coderzh.com&#34;&gt;blog.coderzh.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;博客园博客：&lt;a href=&#34;http://coderzh.cnblogs.com&#34;&gt;coderzh.cnblogs.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;新浪微博：&lt;a href=&#34;http://weibo.com/coderzh&#34;&gt;weibo.com/coderzh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Twitter：&lt;a href=&#34;https://twitter.com/coderzh&#34;&gt;twitter.com/coderzh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Github: &lt;a href=&#34;https://github.com/coderzh&#34;&gt;github.com/coderzh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Email：coderzh@qq.com(pythonzh@gmail.com)&lt;/li&gt;
&lt;li&gt;微信公众号：hacker-thinking&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;声明&#34;&gt;声明&lt;/h3&gt;

&lt;p&gt;本博客所有文章皆为原创。转载请注明原文链接，并最好与本人联系。谢谢！&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>如何看待：微软将以25亿美元收购Minecraft开发商Mojang</title>
            <link>https://fiser321.github.io/2014/09/10/mincraft/</link>
            <pubDate>Wed, 10 Sep 2014 00:00:00 UTC</pubDate>
            <author>CoderZh</author>
            <guid>https://fiser321.github.io/2014/09/10/mincraft/</guid>
            <description>&lt;h3 id=&#34;背景&#34;&gt;背景&lt;/h3&gt;

&lt;p&gt;相信很多人已经玩过《Minecraft》，这是一款3D沙盒游戏，玩家通过采集不同的材料，使用不同的公式合成各种其他材料。然后像搭积木一般将这些方块状的材料搭建出各种木屋，城堡，宏伟的建筑，并且可以加入脚本，设计各种关卡玩法，可谓自由度极高。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Minecraft最初是一款独立游戏，是由瑞典人马库斯·佩尔松（Notch）单独开发的，后成立公司Mojang AB。2009年5月17日发布第一个测试版，直到在2013年6月，这款游戏已经卖出 1100 万套，去年Mojang AB净利润超过了 1 亿美元。马库斯·佩尔松成了独立开发者的偶像，他坚持保持40人小团队，并且拒绝风险投资。更有趣的是，他一直是微软的抨击者，称Windows 8操作系统“可能非常不利于独立游戏”。&lt;/p&gt;

&lt;p&gt;然而，面对微软的25亿美金，马库斯·佩尔松最终还是打算将公司出售。不管出于什么目的，至少Minecraft的价值通过这次收购得到了充分的肯定。&lt;/p&gt;

&lt;p&gt;本人也是游戏开发从业人员，也经常和别人讨论游戏设计相关的内容。通过这次Minecraft的收购，让我再回头思考以下几个问题。&lt;/p&gt;

&lt;h3 id=&#34;独立游戏-vs-团队开发游戏&#34;&gt;独立游戏 VS 团队开发游戏&lt;/h3&gt;

&lt;p&gt;有人和我说过：“团队对个人极其重要，脱离了团队，个人的价值无法得到认可。个人的力量是有限的，你去帮助团队成长，你成就了团队，团队才反过来成就你。”&lt;/p&gt;

&lt;p&gt;关于团队的重要性，是无可辩驳的。但是，这个世界并不是单一的。我们肯定了其中一个东西的重要性，但我们也无需去评判另外一个东西是没有价值的。我一直以来，都是对制作独立游戏的人抱有崇敬之情。&lt;/p&gt;

&lt;p&gt;据我了解，独立游戏制作者表面光鲜，其实背后的辛酸、挑战是很多人无法理解的。从《Indie Game 独立游戏大电影》里就可以看出来。制作独立游戏，意味着你要放弃一份稳定的薪水，意味着看似自由支配的工作时间实际上比所谓的996工作制强度更大，意味着你需要掌握更多的技能，意味着你需要承受更大压力去应付更多的挑战。当然，重要的是，换来了对梦想追求的自由，以及可能带来的财务自由。&lt;/p&gt;

&lt;p&gt;独立游戏很多都是有梦想的，独立游戏也不都是单打独斗的，独立游戏是需要勇气和毅力的，独立游戏是值得尊敬和肯定的。&lt;/p&gt;

&lt;h3 id=&#34;自由沙盒游戏-vs-简单无脑游戏&#34;&gt;自由沙盒游戏 VS 简单无脑游戏&lt;/h3&gt;

&lt;p&gt;也有人和我说过:”自由探索的沙盒游戏太小众，现在已经没有市场。像魔兽世界这样在地图上自由探索的游戏已经不适应了，我们需要自动寻路，我们需要傻瓜式的操作，我们要大众化，难度低，我们要让从不玩游戏的妹子也能容易上手。”&lt;/p&gt;

&lt;p&gt;我一直都是反对这个观点的。如果按照上面的逻辑推理，Minecraft是永远不会成功的，激战这样的游戏不应该存在，剑灵没有自动寻路是不可接受的。&lt;/p&gt;

&lt;p&gt;探索的心是每个人都有的，只是强烈程度不同。有人认为自由探索式的游戏太小众，目标缺失，难度太高，挫败感太强。他们可以自己不做这样类型的游戏，但他们不应该去否定这样它。通过探索激发了人们心底的探索欲，通过自由的沙盒满足了人们心底的创造欲。一个好玩的游戏，不需要符合所有人的胃口，只需要针对喜欢这种类型游戏的人群，把它做到极致，它就可以很成功。&lt;/p&gt;

&lt;h3 id=&#34;总结&#34;&gt;总结&lt;/h3&gt;

&lt;p&gt;独立游戏很有前途。尽管做自己喜欢的游戏吧，即使别人认为很小众。&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>自豪的使用上了WordPress</title>
            <link>https://fiser321.github.io/2014/09/09/wordpress/</link>
            <pubDate>Tue, 09 Sep 2014 00:00:00 UTC</pubDate>
            <author>CoderZh</author>
            <guid>https://fiser321.github.io/2014/09/09/wordpress/</guid>
            <description>&lt;p&gt;自从购买了DigitalOcean的VPS，就一直在上面折腾着。首当其冲的，是把我的博客转移到VPS中来，实现自己的独立博客。开始打算的是一切自己DIY，并且我之前也写过一套博客程序，用Python+Tornado+mongodb实现的。虽然很久没有维护，但还是可用的状态。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;最终，我还是放弃了自己写的NancyBlog(&lt;a href=&#34;http://code.google.com/p/nancyblog/)，而是选择了大名鼎鼎的WordPress，原因如下：&#34;&gt;http://code.google.com/p/nancyblog/)，而是选择了大名鼎鼎的WordPress，原因如下：&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;我只是博客的使用者，应该把博客程序的开发交给更加有经验和经历的人。&lt;/li&gt;
&lt;li&gt;我自己的博客，要换个皮肤比较自己DIY很久。而WordPress有大量的皮肤，随意你切换。&lt;/li&gt;
&lt;li&gt;WordPress有大量的插件支持，比如使用MarkDown编写博文。能完全满足我写博客的需求。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;开始我是打算把博客园里的博客导入过来的，毕竟我在博客园写博客已经有7年的时间了，积累了不少的文章。网上搜寻了导入的方法，找到一篇文章：将博客园(cnblogs.com)数据导入到wordpress(&lt;a href=&#34;http://levi.cg.am/archives/163)。我安装插件后导入毫无反应，应该是这个插件太久没有更新了，已经不能解析最新的博客园备份文章了。无奈只好先放一放，之后有时间自己实现个导入功能。当然，新的博客，一切从头开始，也未必不是一件好事。&#34;&gt;http://levi.cg.am/archives/163)。我安装插件后导入毫无反应，应该是这个插件太久没有更新了，已经不能解析最新的博客园备份文章了。无奈只好先放一放，之后有时间自己实现个导入功能。当然，新的博客，一切从头开始，也未必不是一件好事。&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;创业艰难，坚持不易，思考和总结不能停，博文还是得继续。给自己加油吧！&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>创业感悟</title>
            <link>https://fiser321.github.io/2014/09/07/startup/</link>
            <pubDate>Sun, 07 Sep 2014 00:00:00 UTC</pubDate>
            <author>CoderZh</author>
            <guid>https://fiser321.github.io/2014/09/07/startup/</guid>
            <description>&lt;p&gt;时光飞逝，转眼间距离上一篇博客已经快三年时间。这三年里，人们逐渐从博客转移到了微博，看的人少了，写的人也少了。以前，写博客是一种潮流，现在，写博客已经是一种坚持了。连Google都放弃了RSS，我不知道那些曾经订阅过我博客的朋友，你们还在坚持用RSS看文章吗？我写的这篇文章，你们在用Google Reader的替代品看到我的文章吗？如果有看到，并且我的文章对你有帮助，请留言告诉我。这会是我更新博客很好的动力。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h3 id=&#34;编程-游戏&#34;&gt;编程，游戏&lt;/h3&gt;

&lt;p&gt;也许是缘分，和游戏结下了不解之缘。从小，我就是个爱玩游戏的小孩。小学时因考三好学生，家人奖励了我一台小霸王游戏机，从此爱不释手。家人怕影响我学习，只有寒暑假才能拿出来玩，所以每次玩有格外珍惜。后来，电脑开始慢慢普及，网络开始盛行。人们开始成群的挤在网吧，玩大富翁4，红警，仙剑，FIFA99。我这时正读初中，参加了QB编程竞赛小组。&lt;/p&gt;

&lt;p&gt;那时候的学习资源很有限，走遍整个小县城的书店也找不到几本关于编程的书。竞赛的结果并不理想，但是通过编程小组，让我在很早的时候就接触到了计算机，并且被编程所吸引。不知小叔从哪里找来的一台比386还旧的电脑，于是我就在这台电脑上折腾DOS、QB、WPS。当时编了一个小游戏，随机生成几个字母从左到右移动然后消失，然后需要玩家通过记忆输入刚才出现过的字母，玩的不亦乐乎。&lt;/p&gt;

&lt;p&gt;高中时去租电脑光碟，偶然听老板说了一句：现在不用QB了，都流行用VB了。于是开始学VB。高二时还给英语老师做了一套英语听力教学系统，老师讲解一道题，然后出现四个选项，勾选后会出现对错的结果。当时的自豪感还杠杠的。&lt;/p&gt;

&lt;p&gt;然而，高考的压力，我并未选择喜欢的计算机专业，而是保守的选择了招生最多的土木工程专业，中南大学的土木系在全国还能排在前几名，但是我不喜欢。于是我开始玩游戏，肆无忌惮的玩游戏，通宵达旦的玩剑一，每天晚上宋金战场抢夺BOSS人头总有我的身影，游戏里拉帮结派，抢地盘，打群架，做买卖。记得有一个帮会的人和我们打了一天架后，居然成了好朋友。至今还记得他们的帮会名字叫洪兴十三妹什么的。也有人被我们欺负后说要来长沙找我人肉PK，当时还真有那么一点害怕。&lt;/p&gt;

&lt;p&gt;游戏中有太多有意思的回忆，在此就略过了。从那时起，我才真正意识到一个虚拟的网络世界真的会让人沉迷，忘记了吃饭睡觉，不去上课，考试挂科，对现实世界麻木不仁。当时我也很讨厌自己，为什么会这么没出息？我这学业还能不能完成，我是不是一直在辜负家人的期望。我想改变，但是发现很难。游戏里，我是快乐的，自豪的，精力无限充沛的，而现实中是麻木的，自责的，没精打采的。这种游戏的状态和感受，多年后也不曾再出现过。&lt;/p&gt;

&lt;p&gt;游戏之余，同样有个东西吸引着我，那就是编程。并且很幸运加入了学校的学子天空网（中国大学生创业网）。在那里我遇到了很多优秀的同学，学习到太多的东西。它给了我信心，告诉我，也许，土木工程不一定是我的唯一出路。也许，我毕业后可以做自己喜欢的事情，那就是编程。&lt;/p&gt;

&lt;p&gt;大学临近毕业了，我们专业的就业机会是很多的，而且各大铁路局都抢着要人。同学们纷纷签订了中铁XX局，XX设计院。而我一直在等待，等待着一个机会。有一天，偶然的机会，我看到金山软件在校本部举行校园招聘的消息。室友陪我一起逃课去参加了招聘会。我选择了WPS的自动化测试工程师，因为只有这个职位需要我熟悉的C#语言。我同学当时选了游戏策划，笔试完后，他异常兴奋，他说这是他从小到大答过的最爽的一次考试，里面问的全是游戏怎么好玩的问题。然而兴奋之余，他竟然在联系电话一栏忘记了填。&lt;/p&gt;

&lt;p&gt;后来，我来到了金山软件。他在外面干了几年建筑设计后来回到老家进了个不错的设计院。我来到金山，成为金山训练营第一批成员，从此开始了我的编程生涯。之后从金山WPS，到金山毒霸，后来到西山居，有太多优秀的同事，给予了我巨大的帮助。在金山的这几年，是我学习积累非常重要的几年。测试开发的工作，没有太多项目的压力，不需要加班，可以尽情的利用业余时间去研究各种新奇好玩的技术。我的大部分技术博客，也是在那段时间完成的。&lt;/p&gt;

&lt;p&gt;测试开发的工作，主要是编写一些测试代码去对产品代码进行测试，保证其功能的正确性，稳定性，安全性等。其实在我心里，一直都很羡慕直接参与产品开发的程序员。虽然我知道就编程来说，他们的工作其实和我的并没有多大的区别。但是，看着用户在使用着你的产品，关注着你的产品，作为一个产品直接的开发人员，自豪感是更强的。我告诉自己，我不想再测试别人的代码了，我想自己来写！&lt;/p&gt;

&lt;p&gt;我一直在寻找和等待着这样一个机会，并且也做了不少的尝试。某天，当我听到我原来的技术老大鱼头要出来创业做游戏时，我已经按捺不住兴奋的心情了。于是我放弃了金山安逸的生活，来到了广州，开始了我的游戏开发的生涯，开始了我的创业生涯。&lt;/p&gt;

&lt;h3 id=&#34;创业&#34;&gt;创业&lt;/h3&gt;

&lt;p&gt;公司初创人员有10几个， 大都来自金山内部。我经历了公司从无到有的整个过程，从申请营业执照，到选取办公地点、办公设备，申请域名，搭建Git，RTX，Wiki，项目管理平台Redmine，持续构建CCNet…… 这些都是一个公司必要的支持。而对于我来说，还是蛮新鲜的，能接触到一些平时不容易接触到的东西，初创人员也是激情四溢，各擅所长，感觉平时听他们聊天都能学习到不少的知识。&lt;/p&gt;

&lt;p&gt;即使我平时游戏玩的够多，自认为也算是个中高端游戏玩家。但做为一个刚刚涉入游戏开发领域的新人，心中还是有一些胆怯的，所以我更多的是去听他们的想法，然后在心里理解分析。&lt;/p&gt;

&lt;p&gt;关于游戏定位的讨论一开始就进行了。我们认真去玩并且分析了当时市面上刚出的几款端游。比如《征途2》、《凡人修仙传》等。最终，我们给出了我们游戏的定位：面向低端玩家的电脑配置要求低、易上手操作简单的道具收费玄幻题材的3DMMORPG。好吧，前面这句话是我自己总结的，大致是符合当时的想法的。我对于游戏定位的思考，一直贯穿着整个创业过程。但是在当时，身边都是比我有游戏经验的同事，我其实是没有太多的想法的。我的想法就是，信任他们。&lt;/p&gt;

&lt;p&gt;为了实现游戏的配置低的目标，我们想出一个办法。就是给所有人的电脑配置都比较低，价格控制在3000块左右。一旦一个不合理的算法出现，或者不合理的美术资源添加，将直接影响到我们自己的游戏体验，从而督促着我们去修改。当时的我配置甚至是一台联想笔记本，在上面开发着3D游戏。&lt;/p&gt;

&lt;p&gt;关于这种做法，当时我是纠结的。它的好处是明显的，开发环境和玩家环境一致，可以时刻督促我们的游戏在配置上不至于跑偏。当然，也有另外一个好处就是帮老板省钱。它的坏处也是明显的，严重影响了我们的开发效率。实际上，这条规则并没有一直贯穿执行下去，老同事用着慢如蜗牛的机器，用幻灯片的方式艰难的玩着LOL。新来的同事的配置调到最高却依然满帧。就在前几天，我们给所有程序的电脑升级到8G的内存，并且配置240G的SSD（固态硬盘），我使用了3年的老旧电脑也被替换了下来。用这种极端的方式控制游戏的性能，我也不能完全说是对是错，至少这是我们走过的路。&lt;/p&gt;

&lt;p&gt;开始阶段，我负责整个游戏的UI脚本和表现逻辑部分。这在西山居可是两个组干的活，而且我还是个新手，需要不断的在摸索中学习。很快，我就已经上手。UI需要直接和游戏逻辑交互，表现逻辑需要直接和3D引擎交互，很快，我又担当起了游戏逻辑组的重担，并且在3D引擎组打了一手酱油。如今，我已经成为了程序组内的Full Stack，对整体开发环节最了解的一个。&lt;/p&gt;

&lt;p&gt;写这篇文章，并不是从程序角度对写过的代码和模块进行总结。而是通过回忆一路走过的创业历程，让自己重新去思考，公司和人员是如何变化的，游戏产品是如何演变的，当然最重要的，是自己的心态和思维方式是如何改变的。&lt;/p&gt;

&lt;p&gt;（未完待续……）&lt;/p&gt;</description>
        </item>
        
        <item>
            <title>DigitalOcean上使用Tornado&#43;MongoDB&#43;Nginx&#43;Supervisor&#43;DnsPod快速搭建个人博客</title>
            <link>https://fiser321.github.io/2014/05/19/digitalocean/</link>
            <pubDate>Mon, 19 May 2014 00:00:00 UTC</pubDate>
            <author>CoderZh</author>
            <guid>https://fiser321.github.io/2014/05/19/digitalocean/</guid>
            <description>&lt;h3 id=&#34;digitalocean&#34;&gt;DigitalOcean&lt;/h3&gt;

&lt;p&gt;之前买了个便宜的VPS并且在上面搭建了我自己写的博客程序，后来VPS里运行MongoDB经常自己挂掉就索性没理了。直到现在VPS已经过期，服务器被强制关掉了。周末在家索性想着把这个博客程序重新搭建起来。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;选择Linode还是云主机（阿里云等等）？阿里云貌似有些贵，而且还有一堆备案的流程。Linode最近推出SSD服务，20刀/月的价格，加量不加价，很是吸引人。但无奈还是花的有些心疼。忽然另外一个VPS服务&lt;a href=&#34;https://www.digitalocean.com/?refcode=e131e2bba197&#34;&gt;DigitalOcean&lt;/a&gt;(链接含refcode喔)被我无意发现。DigitalOcean是一家IaaS服务提供商，其特色就是提供快速的固态硬盘服务器，该公司宣称可在55秒之内搭建好一台云服务器，所有的服务器均拥有1G的网络接口，每月基础套餐为1TB，最低套餐费用仅为5美元/月。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://images.cnitblog.com/blog/16913/201405/190032003752557.jpg&#34; alt=&#34;DigitalOcean&#34; /&gt;&lt;/p&gt;

&lt;p&gt;每个月20刀的配置和Linode的20刀的配置几乎一样。但是DigitalOcean提供了最低5美元/月的配置，而且如果使用优惠码注册，还能免费送10美元。相当于免费使用2个月。于是我选择了5美元的配置，Google了一把优惠码，并且非常顺利的找到了能用的。Google搜索：digitalocean coupon。我是在这里找到： &lt;a href=&#34;http://www.retailmenot.com/view/digitalocean.com&#34;&gt;http://www.retailmenot.com/view/digitalocean.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;注册，填入优惠码，选择5$的主机类型，主机位置我选了旧金山（美国西部，据说比其他的稳定），操作系统选择了Ubuntu 14.04 x64。一切都非常顺利，正如他们的广告所说的，55秒内，一台热乎乎的VPS送到了我的手上。&lt;/p&gt;

&lt;p&gt;有兴趣的同学可以用我的推荐链接注册哦，我也能得到一些好处。注册链接：&lt;a href=&#34;https://www.digitalocean.com/?refcode=e131e2bba197&#34;&gt;DigitalOcean&lt;/a&gt;
用到哪天不想用了，DigitalOcean还提供了生成一个镜像(Image)的功能，然后你取消掉VPS服务器(Droplets)，之后将不收取费用。哪天忽然又想用了再开通它，用之前的镜像一还原，马上就恢复了之前的环境，很是方便。&lt;/p&gt;

&lt;h3 id=&#34;vps安装必要的软件&#34;&gt;VPS安装必要的软件&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install git
sudo apt-get install python-pip
sudo apt-get install nginx
sudo apt-get install supervisor
sudo pip install tornado
sudo pip install pymongo
sudo pip install beautifulsoup4
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;（我安装了beautifulsoup是因为我做了个工具把博客园的博客导入过来。）
mongodb 安装：&lt;a href=&#34;http://docs.mongodb.org/manual/tutorial/install-mongodb-on-ubuntu/&#34;&gt;http://docs.mongodb.org/manual/tutorial/install-mongodb-on-ubuntu/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;博客程序&#34;&gt;博客程序&lt;/h3&gt;

&lt;p&gt;之前我用python+tornado+pymongo写了一套博客程序，只是给我自己使用，所以我放在了私有仓库&lt;a href=&#34;http://bitbucket.org&#34;&gt;bitbucket&lt;/a&gt;上。
网站程序一般放在/var/www目录里。所以我用git clone把我的代码放到了/var/www/coderzh&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo mkdir /var/www
cd /var/www
git clone https://xxxxx.xxxx.xxx
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;mongodb&#34;&gt;MongoDB&lt;/h3&gt;

&lt;p&gt;由于我的程序没有使用MongoDB默认的端口27017，所以我需要修改端口的设置。找到MongoDB的配置文件，修改port字段：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vim /etc/mongodb.conf
#修改port=27017部分 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;停止和重启mongodb：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo service mongodb stop
sudo service mongodb start
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;运行博客程序&#34;&gt;运行博客程序&lt;/h3&gt;

&lt;p&gt;博客程序运行需要的环境已经基本配置好，这时运行博客程序看是否能正常起来：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo python /var/www/coderzh/main.py --port 8001
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;打开浏览器试试能不能访问: &lt;code&gt;http://服务器IP:8001&lt;/code&gt;   OK，太棒了，一起正常。&lt;/p&gt;

&lt;h3 id=&#34;supervisor&#34;&gt;Supervisor&lt;/h3&gt;

&lt;p&gt;停掉刚才的main.py，这时候要上一个好东西。它就是Supervisor，它是一个进程监控守护程序。它负责开机时自动启动你配置好的程序，并且在你的程序莫名其妙挂掉时，Supervisor会自动去重启他们。可以说，它是网站稳定运行的后勤保障啊。&lt;/p&gt;

&lt;p&gt;新建一个Supervisor配置文件，放到/ect/supervisor/conf.d目录下，因为/etc/supervisor/supervisord.conf里配置了自动读取conf.d目录下的文件：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vim /ect/supervisor/conf.d/coderzh.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;编辑coderzh.conf&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[program:coderzh]
command=python /var/www/coderzh/main.py --port=8001
directory=/var/www/coderzh
autorestart=true
redirect_stderr=true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重载配置，重启Supervisior：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;supervisorctl reload 
supervisorctl start all
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;再次访问: &lt;code&gt;http://服务器IP:8001&lt;/code&gt;   试试，嗯，一起正常。Supervisor工作了。&lt;/p&gt;

&lt;h3 id=&#34;nginx&#34;&gt;Nginx&lt;/h3&gt;

&lt;p&gt;接下来上Nginx，它是一个HTTP和反向代理服务器。最终网站的访问经过域名解析到服务器后，都要通过Nginx将访问请求转到main.py中处理。理解Nginx的配置文件很重要，好吧，说实话，我当初摸Nginx，Apache之类的东西时都是一头雾水的。Nginx的主要配置文件路径在：/etc/nginx/nginx.conf&lt;/p&gt;

&lt;p&gt;为了让Nginx支持多域名，多Web服务。我修改/etc/nginx/nginx.conf 内容如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;user www-data;
worker_processes 4;
pid /run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
}

http {
    types_hash_max_size 2048;
    server_names_hash_bucket_size 64;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;
 
    access_log /var/log/nginx/access.log;
 
    keepalive_timeout 65;
    proxy_read_timeout 200;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    gzip on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_types text/plain application/x-javascript text/css application/xml; 

    include /etc/nginx/conf.d/*;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注意最后一行：include /etc/nginx/conf.d/*，所以在conf.d目录里，可以为每个网站都配置一个.conf文件。我为博客程序生产的配置：vim /etc/nginx/conf.d/coderzh.conf&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;upstream coderzh {
    server 127.0.0.1:8001;
}

server {
    listen 80;
    server_name coderzh.com www.coderzh.com;

    location = /favicon.ico {
        rewrite (.*) /static/favicon.ico;
    }
    location = /robots.txt {
        rewrite (.*) /static/robots.txt;
    }

    location / {
        proxy_pass_header Server;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_pass http://coderzh;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重新启动nginx&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;service nginx restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这时已经可以用80端口访问了。&lt;/p&gt;

&lt;h3 id=&#34;dnspod&#34;&gt;DnsPod&lt;/h3&gt;

&lt;p&gt;接下来就是通过DnsPod将域名解析到这台VPS服务器。应该不是什么问题，有问题可以查看DnsPod帮助。&lt;/p&gt;

&lt;h3 id=&#34;部署完成&#34;&gt;部署完成&lt;/h3&gt;

&lt;p&gt;执行导入工具，将博客园的博客导入进来。访问：&lt;a href=&#34;http://www.coderzh.com&#34;&gt;http://www.coderzh.com&lt;/a&gt;。HOHO，大功告成。&lt;/p&gt;</description>
        </item>
        
    </channel>
</rss>
